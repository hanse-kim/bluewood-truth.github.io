{"version":3,"file":"component---src-templates-{tag}-tsx-08fb4418c3c2b5346751.js","mappings":"8MAsEA,UAxBgB,SAAC,GAI+C,IAH9DA,EAG8D,EAH9DA,YACAC,EAE8D,EAF9DA,KACAC,EAC8D,EAD9DA,SAEOC,EAAOH,EAAPG,IACP,EAA4BF,EAAKG,OAA1BC,EAAP,EAAOA,MAAOC,EAAd,EAAcA,WACRC,GAAQC,EAAAA,EAAAA,UAAQ,kBAAMH,EAAMI,KAAI,SAACC,GAAD,OAAUA,EAAKC,UAAO,CAACN,IAC7D,GAAqDO,EAAAA,EAAAA,GAAcL,EAAO,CACxEM,aAAaC,EAAAA,EAAAA,IAAqBZ,EAASa,QAA9B,KACbC,aAAa,IAFRC,EAAP,EAAOA,cAAeC,EAAtB,EAAsBA,SAAUC,EAAhC,EAAgCA,SAAUC,EAA1C,EAA0CA,QAK1C,OACE,QAAC,IAAD,MACE,QAAC,KAAD,YACOjB,EADP,OACgBG,EADhB,OAGA,QAAC,IAAD,CAAUC,MAAOU,EAAeI,SAAUnB,EAASoB,QACnD,QAAC,IAAD,CAASJ,SAAUA,EAAUC,SAAUA,EAAUC,QAASA","sources":["webpack://bluewood-blog/./src/templates/{tag}.tsx"],"sourcesContent":["import React, {useMemo} from 'react';\r\nimport {graphql, PageProps} from 'gatsby';\r\nimport {MdxNode} from 'src/types';\r\nimport {Layout} from 'src/views/layout';\r\nimport {PostList} from 'src/views/postList';\r\nimport {HeadingTitle} from 'src/components/typography';\r\nimport {usePagination} from 'src/hooks/usePagination';\r\nimport {PageNav} from 'src/views/pageNav';\r\nimport {parseUrlSearchParams} from 'src/utils/common';\r\n\r\ninterface PageContextType {\r\n  tag: string;\r\n}\r\n\r\ninterface DataType {\r\n  allMdx: {\r\n    edges: {node: MdxNode}[];\r\n    totalCount: number;\r\n  };\r\n}\r\n\r\nexport const pageQuery = graphql`\r\n  query ($tag: String) {\r\n    allMdx(\r\n      limit: 2000\r\n      sort: {fields: [frontmatter___date], order: DESC}\r\n      filter: {frontmatter: {tags: {in: [$tag]}}}\r\n    ) {\r\n      totalCount\r\n      edges {\r\n        node {\r\n          id\r\n          slug\r\n          frontmatter {\r\n            title\r\n            date(formatString: \"YYYY-MM-DD\")\r\n            tags\r\n          }\r\n          rawBody\r\n          excerpt(pruneLength: 200)\r\n        }\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nconst TagPage = ({\r\n  pageContext,\r\n  data,\r\n  location,\r\n}: PageProps<DataType, PageContextType, {referrer: string}>) => {\r\n  const {tag} = pageContext;\r\n  const {edges, totalCount} = data.allMdx;\r\n  const nodes = useMemo(() => edges.map((edge) => edge.node), [edges]);\r\n  const {paginatedData, currPage, lastPage, setPage} = usePagination(nodes, {\r\n    initialPage: parseUrlSearchParams(location.search)['page'],\r\n    withRouting: true,\r\n  });\r\n\r\n  return (\r\n    <Layout>\r\n      <HeadingTitle>\r\n        태그: {tag} (총 {totalCount}건)\r\n      </HeadingTitle>\r\n      <PostList nodes={paginatedData} referrer={location.href} />\r\n      <PageNav currPage={currPage} lastPage={lastPage} setPage={setPage} />\r\n    </Layout>\r\n  );\r\n};\r\n\r\nexport default TagPage;\r\n"],"names":["pageContext","data","location","tag","allMdx","edges","totalCount","nodes","useMemo","map","edge","node","usePagination","initialPage","parseUrlSearchParams","search","withRouting","paginatedData","currPage","lastPage","setPage","referrer","href"],"sourceRoot":""}