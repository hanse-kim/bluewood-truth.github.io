{"version":3,"file":"component---src-templates-{tag}-tsx-17e509a7473f1d80366c.js","mappings":"6PAsBO,MA0BMA,EAAQC,IACnBC,EAAAA,EAAAA,GAACC,EAAAA,GAAGC,EAAAA,EAAAA,GAAA,CAACC,MAAO,OAAOJ,EAAMK,YAAYC,OAAWN,IA4BlD,UAzBgBO,IAIkD,IAJjD,YACfF,EAAW,KACXG,EAAI,SACJC,GAC2DF,EAC3D,MAAM,IAAED,GAAQD,GACV,MAAEK,GAAUF,EAAKG,OACjBC,GAAQC,EAAAA,EAAAA,UAAQ,KAAMC,EAAAA,EAAAA,IAAiBJ,EAAMK,KAAKC,GAASA,EAAKC,SAAQ,CAACP,KAEzE,cAAEQ,EAAa,SAAEC,EAAQ,SAAEC,EAAQ,QAAEC,IAAYC,EAAAA,EAAAA,GAAiBV,EAAO,CAC7EW,aAAaC,EAAAA,EAAAA,IAAqBf,EAASgB,QAAQC,KACnDC,aAAa,IAGf,OACE1B,EAAAA,EAAAA,GAAC2B,EAAAA,EAAM,MACL3B,EAAAA,EAAAA,GAAC4B,EAAAA,GAAY,KAAC,OACPvB,EAAI,OAAKM,EAAMkB,OAAO,OAE7B7B,EAAAA,EAAAA,GAAC8B,EAAAA,EAAQ,CAACnB,MAAOM,EAAec,SAAUvB,EAASwB,QACnDhC,EAAAA,EAAAA,GAACiC,EAAAA,EAAU,CAACf,SAAUA,EAAUC,SAAUA,EAAUC,QAASA,IACtD,C","sources":["webpack://hans-blog/./src/templates/{tag}.tsx"],"sourcesContent":["import { graphql, type PageProps } from 'gatsby';\nimport React, { useMemo } from 'react';\nimport { filterHidedNodes, parseUrlSearchParams } from 'src/_common/utils';\nimport { SEO } from 'src/components/seo';\nimport { HeadingTitle } from 'src/components/typography';\nimport { usePaginatedData } from 'src/hooks/use-paginated-data';\nimport { type MdxNode } from 'src/types';\nimport { Layout } from 'src/views/layout';\nimport { Pagination } from 'src/views/pagination';\nimport { PostList } from 'src/views/post-list';\n\ninterface PageContextType {\n  tag: string;\n}\n\ninterface DataType {\n  allMdx: {\n    edges: Array<{ node: MdxNode }>;\n    totalCount: number;\n  };\n}\n\nexport const pageQuery = graphql`\n  query ($tag: String) {\n    allMdx(\n      limit: 2000\n      sort: { frontmatter: { date: DESC } }\n      filter: { frontmatter: { tags: { in: [$tag] } } }\n    ) {\n      edges {\n        node {\n          id\n          frontmatter {\n            title\n            date(formatString: \"YYYY-MM-DD\")\n            tags\n            hide\n          }\n          fields {\n            slug\n          }\n          excerpt(pruneLength: 200)\n        }\n      }\n    }\n  }\n`;\n\nexport const Head = (props: PageProps<DataType, PageContextType>) => (\n  <SEO title={`태그: ${props.pageContext.tag}`} {...props} />\n);\n\nconst TagPage = ({\n  pageContext,\n  data,\n  location,\n}: PageProps<DataType, PageContextType, { referrer: string }>) => {\n  const { tag } = pageContext;\n  const { edges } = data.allMdx;\n  const nodes = useMemo(() => filterHidedNodes(edges.map((edge) => edge.node)), [edges]);\n\n  const { paginatedData, currPage, lastPage, setPage } = usePaginatedData(nodes, {\n    initialPage: parseUrlSearchParams(location.search).page,\n    withRouting: true,\n  });\n\n  return (\n    <Layout>\n      <HeadingTitle>\n        태그: {tag} (총 {nodes.length}건)\n      </HeadingTitle>\n      <PostList nodes={paginatedData} referrer={location.href} />\n      <Pagination currPage={currPage} lastPage={lastPage} setPage={setPage} />\n    </Layout>\n  );\n};\n\nexport default TagPage;\n"],"names":["Head","props","___EmotionJSX","SEO","_extends","title","pageContext","tag","_ref","data","location","edges","allMdx","nodes","useMemo","filterHidedNodes","map","edge","node","paginatedData","currPage","lastPage","setPage","usePaginatedData","initialPage","parseUrlSearchParams","search","page","withRouting","Layout","HeadingTitle","length","PostList","referrer","href","Pagination"],"sourceRoot":""}