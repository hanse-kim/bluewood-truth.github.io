{"componentChunkName":"component---src-templates-{tag}-tsx","path":"/tags/java-script/","result":{"data":{"allMdx":{"edges":[{"node":{"id":"db1bdadf-8d33-58ba-82b2-46957ee538e2","frontmatter":{"title":"클로저(Closure)","date":"2022-03-14","tags":["JavaScript"],"hide":true},"fields":{"slug":"/2022/03-14-closure/"},"excerpt":"요약 클로저란 자신이 정의된 렉시컬 환경을 기억하는 함수다.\n\n클로저는 상태(state)를 유지하고 이것이 외부 요인에 의해 의도치 않게 변경되지 않도록 안전하게 은닉(information hiding)하기 위해 사용한다.\n\n클로저\n\n란 자신이 정의된 렉시컬 환경을 기억하는 함수다.\n\n위 예제를 보면 inner가 호출되는 시점에서 oute…"}},{"node":{"id":"cffe8beb-c670-5d4f-b96e-8d9609a0f1c2","frontmatter":{"title":"실행 컨텍스트(Execution Context)","date":"2022-03-10","tags":["JavaScript"],"hide":true},"fields":{"slug":"/2022/03-10-execution-context/"},"excerpt":"요약 실행 컨텍스트란 소스코드를 실행하는 데 필요한 환경을 제공하고 코드의 실행 결과를 관리하는 영역이다.\n\n코드의 실행 순서는 실행 컨텍스트 스택에 의해, 스코프와 식별자는 실행 컨텍스트의 렉시컬 환경에 의해 관리된다.\n\n소스코드의 평가와 실행\n\n자바스크립트 엔진은 소스코드를 2개의 과정으로 나누어 처리한다.\n\n소스코드의 평가\n함수와 변수의 선언문을 실행…"}},{"node":{"id":"79ddb368-5dc0-5e7b-bd69-2526a726f2de","frontmatter":{"title":"함수(Function)","date":"2022-03-09","tags":["JavaScript"],"hide":true},"fields":{"slug":"/2022/03-09-function/"},"excerpt":"요약 프로그래밍에서 함수란 코드의 재사용을 위해 특정한 동작을 수행하는 코드를 묶어 하나의 실행 단위로 만든 것을 말한다.\n\n함수를 정의하는 방법으로는 크게 함수 선언문과 함수 표현식이 있다.\n\n함수 선언문: function 키워드로 시작하여 함수를 정의한다. 런타임 이전에 함수 객체를 생성한다. 함수 표현식: 변수에 함수 리터럴을 할당하는 형태로 함수를…"}},{"node":{"id":"9c56be40-101f-5234-9c92-cc2d2dc391e9","frontmatter":{"title":"데이터 타입(Data Type)","date":"2022-03-08","tags":["JavaScript"],"hide":true},"fields":{"slug":"/2022/03-08-data-type/"},"excerpt":"요약 데이터 타입이란 프로그래밍에서 여러 종류의 데이터를 식별하기 위한 분류이다.\n\nJavaScript는 동적 타입 언어로, 변수가 타입과 연결되지 않으며 모든 타입의 값으로 할당 및 재할당이 가능하다.\n\nJavaScript의 데이터 타입은 크게 원시 타입과 객체 타입으로 나뉜다.\n\n원시 타입은 변경할 수 없는 값을 갖는 타입이며, 숫자, 문자열, 불리언 등이…"}},{"node":{"id":"ae034309-d68d-5381-add3-dbe6c6731590","frontmatter":{"title":"표현식(Expression)과 문(Statement)","date":"2022-03-07","tags":["JavaScript"],"hide":true},"fields":{"slug":"/2022/03-07-expression-and-statement/"},"excerpt":"요약 문(statement)이란 토큰(token)으로 구성된 프로그램의 최소 실행 단위이다. 선언문, 할당문, 조건문, 반복문 등, 문을 통해 컴퓨터가 어떤 작업을 수행하도록 명령할 수 있다. 문의 집합이 프로그램이며, 문을 작성하고 순서에 맞게 나열하는 작업을 프로그래밍이라 한다.\n\n표현식(expression)이란 값으로 평가될 수 있는 문을 말한다. 즉…"}},{"node":{"id":"1351b181-a931-57b6-ac38-20e09f07d983","frontmatter":{"title":"논리 연산자를 이용한 간단한 조건부 표현식","date":"2022-03-05","tags":["TIL","JavaScript"],"hide":true},"fields":{"slug":"/2022/03-05-idomatic-expression-with-logical-operation/"},"excerpt":"논리 연산자 논리 연산자란 조건문에서 흔히 사용하는 &&(AND), ||(OR), !(NOT) 등의 연산자를 말한다.\n\nA && B: A가 참이면 B를, 거짓이면 A를 리턴한다.\n\nA || B: A가 참이면 A를, 거짓이면 B를 리턴한다.\n\n!A: A가 참이면 false를, 거짓이면 true를 리턴한다.\n\n여기서 말하는 참, 거짓은 Boolean 타…"}},{"node":{"id":"610d065d-69d8-503b-8c0d-c19d2b07947f","frontmatter":{"title":"호이스팅(Hoisting)","date":"2022-02-28","tags":["JavaScript"],"hide":true},"fields":{"slug":"/2022/02-28-hoisting/"},"excerpt":"요약 호이스팅이란 JavaScript의 특징으로, 함수나 변수의 선언을 코드의 최상단으로 끌어올린 것처럼 동작하는 방식을 말한다.\n\n호이스팅은 JavaScript가 함수 단위 스코프를 따르는 언어이기 때문에 발생한다. 한 함수 내에서 함수나 변수는 함수 전체에 걸쳐 정의되기 때문에, 필연적으로 함수 최상단에서 선언된 것과 같은 동작을 한다.\n\nJavaScri…"}},{"node":{"id":"713962e5-1392-5237-be93-595eb71878d9","frontmatter":{"title":"this","date":"2022-02-27","tags":["JavaScript"],"hide":true},"fields":{"slug":"/2022/02-27-this/"},"excerpt":"요약 JavaScript에서 this는 함수가 호출되는 방식에 따라 달라진다.\n\n전역 컨텍스트: 전역 객체를 가리킨다. 함수 단순 호출: 엄격 모드라면 undefined를, 그렇지 않다면 전역 객체를 가리킨다. 객체 메서드: 해당 객체를 가리킨다. 함수 생성자: 생성될 객체를 가리킨다. 이벤트 핸들러: 이벤트 핸들러가 등록된 엘리먼트를 가리킨다.\n\nES5부…"}},{"node":{"id":"21a1531e-2cf5-5494-978b-1cf10f0c4e0e","frontmatter":{"title":"즉시 실행 함수(IIFE)","date":"2022-02-26","tags":["JavaScript"],"hide":true},"fields":{"slug":"/2022/02-26-immediately-invoked-function-expression/"},"excerpt":"요약 IIFE란 정의되자마자 즉시 실행되는 JavaScript 함수를 말한다. 함수 표현식을 감싸는 큰 괄호(그룹 연산자)와, 이 함수를 실행시키는 괄호(호출 연산자)로 구성되어 있다. (예: (function() {...})();)\n\nIIFE내의 변수는 밖에서 접근이 불가능하기 때문에, 글로벌 스코프를 오염시키지 않고 웹 페이지를 초기화할 수 있어 유용하다…"}},{"node":{"id":"cf832a7a-ea5f-5e7a-a9c4-06dc4a9517b7","frontmatter":{"title":"화살표 함수(Arrow Function)","date":"2022-02-24","tags":["JavaScript","ES6"],"hide":true},"fields":{"slug":"/2022/02-24-arrow-function/"},"excerpt":"요약 화살표 함수란 ES6부터 추가된 새로운 형태의 함수 표현식이다. 기존의 function 키워드를 이용한 함수 표현식에 비해 간결하고 직관적인 함수 정의가 가능하다.\n\n화살표 함수의 특징은 this를 갖지 않는다는 점이다. 기존 함수는 자신이 호출된 위치에 따라 this가 가리키는 대상이 달라진다. 반면 화살표 함수는 어디에서 호출되든 항상 자신이 작성된…"}}]}},"pageContext":{"tag":"JavaScript"}},"staticQueryHashes":["2134554265","2915125623"],"slicesMap":{}}