{"version":3,"file":"component---src-pages-posts-tsx-88f12555d7bdfd918d89.js","mappings":"4PAiBO,MAoBMA,EAAQC,IAAqBC,EAAAA,EAAAA,GAACC,EAAAA,GAAGC,EAAAA,EAAAA,GAAA,CAACC,MAAM,SAAYJ,IAkBjE,UAhBkBK,IAAyD,IAAtDC,MAAM,OAAEC,GAAQ,SAAEC,GAA+BH,EACpE,MAAMI,GAAgBC,EAAAA,EAAAA,UAAQ,KAAMC,EAAAA,EAAAA,IAAiBJ,EAAOK,QAAQ,CAACL,EAAOK,SACtE,cAAEC,EAAa,SAAEC,EAAQ,SAAEC,EAAQ,QAAEC,IAAYC,EAAAA,EAAAA,GAAiBR,EAAe,CACrFS,aAAaC,EAAAA,EAAAA,IAAqBX,EAASY,QAAQC,KACnDC,aAAa,IAGf,OACErB,EAAAA,EAAAA,GAACsB,EAAAA,EAAM,MACLtB,EAAAA,EAAAA,GAACuB,EAAAA,GAAY,KAAC,WAASf,EAAcgB,OAAO,OAC5CxB,EAAAA,EAAAA,GAACyB,EAAAA,EAAQ,CAACd,MAAOC,EAAec,SAAUnB,EAASoB,QACnD3B,EAAAA,EAAAA,GAAC4B,EAAAA,EAAU,CAACf,SAAUA,EAAUC,SAAUA,EAAUC,QAASA,IACtD,C","sources":["webpack://hans-blog/./src/pages/posts.tsx"],"sourcesContent":["import { graphql, type PageProps } from 'gatsby';\nimport React, { useMemo } from 'react';\nimport { filterHidedNodes, parseUrlSearchParams } from 'src/_common/utils';\nimport { SEO } from 'src/components/seo';\nimport { HeadingTitle } from 'src/components/typography';\nimport { usePaginatedData } from 'src/hooks/use-paginated-data';\nimport { type MdxNode } from 'src/types';\nimport { Layout } from 'src/views/layout';\nimport { Pagination } from 'src/views/pagination';\nimport { PostList } from 'src/views/post-list';\n\ninterface DataType {\n  allMdx: {\n    nodes: MdxNode[];\n  };\n}\n\nexport const pageQuery = graphql`\n  {\n    allMdx(sort: { frontmatter: { date: DESC } }) {\n      nodes {\n        id\n        frontmatter {\n          title\n          date(formatString: \"YYYY-MM-DD\")\n          tags\n          hide\n        }\n        excerpt(pruneLength: 200)\n        fields {\n          slug\n        }\n      }\n    }\n  }\n`;\n\nexport const Head = (props: PageProps) => <SEO title=\"Posts\" {...props} />;\n\nconst PostsPage = ({ data: { allMdx }, location }: PageProps<DataType>) => {\n  const filteredNodes = useMemo(() => filterHidedNodes(allMdx.nodes), [allMdx.nodes]);\n  const { paginatedData, currPage, lastPage, setPage } = usePaginatedData(filteredNodes, {\n    initialPage: parseUrlSearchParams(location.search).page,\n    withRouting: true,\n  });\n\n  return (\n    <Layout>\n      <HeadingTitle>전체 글 (총 {filteredNodes.length}건)</HeadingTitle>\n      <PostList nodes={paginatedData} referrer={location.href} />\n      <Pagination currPage={currPage} lastPage={lastPage} setPage={setPage} />\n    </Layout>\n  );\n};\n\nexport default PostsPage;\n"],"names":["Head","props","___EmotionJSX","SEO","_extends","title","_ref","data","allMdx","location","filteredNodes","useMemo","filterHidedNodes","nodes","paginatedData","currPage","lastPage","setPage","usePaginatedData","initialPage","parseUrlSearchParams","search","page","withRouting","Layout","HeadingTitle","length","PostList","referrer","href","Pagination"],"sourceRoot":""}